@using iSpeakCore.Controllers;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model IEnumerable<iSpeakCore.Models.RemindersModel>
@{
    string CONTROLLERNAME = RemindersController.CONTROLLERNAME;
    iSpeakCore.Models.UserAccountRolesModel userAccess = iSpeakCore.Controllers.UserAccountsController.getUserAccess(Context);
}

<!--begin::Header-->
<div class="card-header border-0 pt-0">
    <!--begin::Left Toolbar-->
    <div class="d-flex align-items-center position-relative my-0">
        <div class="d-flex align-items-center">
            <button type="button" onclick="location.href='@Url.Action(nameof(RemindersController.Index), CONTROLLERNAME)';" class="btn btn-light-success">
                <i class="bi bi-arrow-up-right-square fs-1"></i>@Helper.BUTTONTEXT_OPENMODULE
            </button>
        </div>
    </div>
    <!--end::Left Toolbar-->
</div>
<!--end::Header-->
<!--begin::Card body-->
<div class="card-body pt-0">
    <!--begin::Table-->
    <table class="table datatable align-middle table-row-dashed fs-6 gy-5">
        <thead>
            <tr class="text-start text-muted fw-bold fs-7 text-uppercase gs-0">
                <th class="w-2px non-searchable non-sortable"></th>
                <th class="">@Html.DisplayNameFor(model => model.Timestamp)</th>
                <th class="">@Html.DisplayNameFor(model => model.Description)</th>
                <th class="w-100px"></th>
                <th class="w-50px non-searchable non-sortable text-end"></th>
                <th class="w-2px non-searchable non-sortable"></th>
            </tr>
        </thead>
        <tbody class="text-gray-600 fw-semibold">
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td></td>
                        <td>@Html.DisplayFor(modelItem => item.Timestamp)</td>
                        <td class="tablecellwrap">@Html.DisplayFor(modelItem => item.Description)</td>
                        <td class="text-end">
                            @{
                                string statusColor = "";
                                 if (item.Status_enumid == EnumReminderStatuses.New)
                                    statusColor = "danger";
                                 else if (item.Status_enumid == EnumReminderStatuses.InProgress)
                                     statusColor = "primary";
                                else if (item.Status_enumid == EnumReminderStatuses.OnHold)
                                    statusColor = "info";
                                else if (item.Status_enumid == EnumReminderStatuses.Waiting)
                                    statusColor = "warning";
                                else if (item.Status_enumid == EnumReminderStatuses.Completed)
                                    statusColor = "success";
                                else if (item.Status_enumid == EnumReminderStatuses.Cancel)
                                    statusColor = "dark";
                            }
                            <span class="btn btn-@statusColor btn-sm w-100px">@LibCore.Util.GetEnumDescription(item.Status_enumid)</span>
                        </td>
                        <td>
                            @if (userAccess.ActivityLogs_View)
                            {
                                <div class="menu-item px-3">
                                    <a onclick="Log('@item.Id')" href="javascript:void(0);" class="menu-link px-3"><i class="bi bi-journal pe-2 fs-2"></i>@Helper.TABLEACTIONMENU_Log</a>
                                </div>
                            }
                        </td>
                        <td></td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <!--end::Table-->
</div>
<!--end::Card body-->
