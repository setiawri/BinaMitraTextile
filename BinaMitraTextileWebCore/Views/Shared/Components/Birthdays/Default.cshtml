@using iSpeakCore.Controllers;
@using LibCore;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model IEnumerable<iSpeakCore.Models.UserAccountsModel>
@{
    string CONTROLLERNAME = RemindersController.CONTROLLERNAME;
    iSpeakCore.Models.UserAccountRolesModel userAccess = iSpeakCore.Controllers.UserAccountsController.getUserAccess(Context);

    List<UserAccountsModel> models = ViewData["BirthdaysModels"] as List<UserAccountsModel>;
    DateTime todayDate = Util.getCurrentDateTime().Date;
    List<UserAccountRolesModel> rolesList = UserAccountRolesController.get();
}

<!--begin::Card body-->
<div class="card-body pt-0">
    <!--begin::Table-->
    <table id="BirthdaysDatatable" class="table datatable align-middle table-row-dashed fs-6 gy-5">
        <thead>
            <tr class="text-start text-muted fw-bold fs-7 text-uppercase gs-0">
                <th class="w-2px non-searchable non-sortable"></th>
                <th class="">Birthday</th>
                <th class="">Active Lesson</th>
                <th class="">Name</th>
                <th class="">Phone</th>
                <th class="">Roles</th>
                <th class="w-2px non-searchable non-sortable"></th>
            </tr>
        </thead>
        <tbody class="text-gray-600 fw-semibold">
            @if (models != null)
            {
                foreach (var item in models)
                {
                    <tr>
                        <td></td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Birthday)
                            @{
                                int remainingDayCount = (int)(new DateTime(todayDate.Year, item.Birthday.Month, item.Birthday.Day) - todayDate).TotalDays;
                                if (remainingDayCount < 0)
                                {
                                    <span class="btn btn-secondary btn-sm w-100px p-1 ms-2">@Math.Abs(remainingDayCount) day@(remainingDayCount < -1 ? "s" : "") ago</span>
                                }
                                else if (remainingDayCount > 0)
                                {
                                    <span class="btn btn-primary btn-sm w-100px p-1 ms-2">In @remainingDayCount day@(remainingDayCount > 1 ? "s" : "")</span>
                                }
                                else
                                {
                                    <span class="btn btn-success btn-sm w-100px p-1 ms-2">Today</span>
                                }
                            }
                        </td>
                        <td class="text-center">@Html.DisplayFor(modelItem => item.ActiveLessonPackages)</td>
                        <td>@Html.DisplayFor(modelItem => item.Fullname)</td>
                        <td>
                                @if (!string.IsNullOrWhiteSpace(item.Phone1))
                                {
                                    <div><span class="">@item.Phone1</span></div>
                                }
                                @if (!string.IsNullOrWhiteSpace(item.Phone2))
                                {
                                    <div><span class="">@item.Phone2</span></div>
                                }
                            
                        </td>
                        <td>
                               @if (item.Roles_List != null)
                                {
                                    foreach(string roleId in item.Roles_List)
                                    {
                                        int index = rolesList.FindIndex(x => x.Id.ToString() ==  roleId);
                                        <div><span class="badge @Helper.badgeColors[index] w-70px">@rolesList[index].Name</span></div>
                                    }
                                }
                        </td>
                        <td></td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <!--end::Table-->
</div>
<!--end::Card body-->
